#!/usr/bin/env bash
#
# mlxshake - Run MlxShake from the command line
#
# Synopsis:
#
#     mlxshake <infile> <outfile> [--format <format>]
#

# Find the MlxShake installation

if [[ $0 == "mlxshake" ]]; then
    # We must be on the path. Hope this works.
    me="$(which mlxshake 2>/dev/null)"
    if [[ $? -ne 0 ]]; then
        echo >&2 "mlxshake: Error: internal error: unable to locate myself on the path. Run me with a full path."
    fi
else
    me="$0"
fi

bin_dir="$(dirname "$me")"
distroot="$(dirname "$bin_dir")"

# Assemble arguments

args_file="$TMPDIR/mlxshake_args_${PPID}_${RANDOM}_${RANDOM}_${RANDOM}_${RANDOM}.txt"
echo -n >"$args_file"
for arg in "$@"; do
    echo "$arg" >>"$args_file"
done

# I don't want to bother with the multi-level quoting involved in passing these on the
# command line, so pass them via a file.

# Run it in Matlab

"$bin_dir/_mlxshake_run_matlab" "janklab.mlxshake.internal.mlxshake_shell_command('$args_file')"
matlab_exit_status=$?
rm "$args_file"
exit $?
